{
  "address": "0x9fDcf4D611f40dAB07fCD168833767938e41151f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "question",
          "type": "string"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum PredictionMarket.MarketOutcome",
          "name": "outcome",
          "type": "uint8"
        }
      ],
      "name": "MarketResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "prediction",
          "type": "bool"
        }
      ],
      "name": "VotesBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WinningsClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_prediction",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "buyVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_publicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sharedSecret",
          "type": "string"
        }
      ],
      "name": "createMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalYesVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalNoVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalWinnings",
          "type": "uint256"
        },
        {
          "internalType": "enum PredictionMarket.MarketOutcome",
          "name": "outcome",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_outcome",
          "type": "bool"
        }
      ],
      "name": "resolveMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x076e2b25def7a41d87e086db518136e9145a3f68207e7a090092ca76d2d4c52c",
  "receipt": {
    "to": null,
    "from": "0xd69a4dd0dfb261a8EF37F45925491C077EF1dBFb",
    "contractAddress": "0x9fDcf4D611f40dAB07fCD168833767938e41151f",
    "transactionIndex": 0,
    "gasUsed": "1539469",
    "logsBloom": "0x
    "blockHash": "0x1954aca52299f96090a8d0041d7ef9679f0deb1f953e7244041ade3ac2666e3f",
    "transactionHash": "0x076e2b25def7a41d87e086db518136e9145a3f68207e7a090092ca76d2d4c52c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 46928055,
        "transactionHash": "0x076e2b25def7a41d87e086db518136e9145a3f68207e7a090092ca76d2d4c52c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000d69a4dd0dfb261a8ef37f45925491c077ef1dbfb",
          "0x000000000000000000000000cfef2a3dc244ef7d0fb93c45e762d671445c4569"
        ],
        "data": "0x000000000000000000000000000000000000000000000000002bc11c75a2373000000000000000000000000000000000000000000000000007b5e65b2aab9d1f0000000000000000000000000000000000000000000001e581228cccce0614f3000000000000000000000000000000000000000000000000078a253eb50965ef0000000000000000000000000000000000000000000001e5814e4de943a84c23",
        "logIndex": 0,
        "blockHash": "0x1954aca52299f96090a8d0041d7ef9679f0deb1f953e7244041ade3ac2666e3f"
      }
    ],
    "blockNumber": 46928055,
    "cumulativeGasUsed": "1539469",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c5b3bda761502084f3dde53521833f40",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionMarket.MarketOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"name\":\"MarketResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prediction\",\"type\":\"bool\"}],\"name\":\"VotesBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WinningsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_prediction\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_encryptedVote\",\"type\":\"bytes\"}],\"name\":\"buyVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"}],\"name\":\"claimWinnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_publicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sharedSecret\",\"type\":\"string\"}],\"name\":\"createMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalYesVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNoVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWinnings\",\"type\":\"uint256\"},{\"internalType\":\"enum PredictionMarket.MarketOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_outcome\",\"type\":\"bool\"}],\"name\":\"resolveMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PredictionMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract PredictionMarket {\\r\\n    address public owner;\\r\\n    uint256 public marketCount;\\r\\n\\r\\n    struct Secrets {\\r\\n        string sharedSecret;\\r\\n        string publicKey;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => Secrets) private sharedSecret;\\r\\n\\r\\n    enum MarketOutcome {\\r\\n        NotResolved,\\r\\n        Yes,\\r\\n        No\\r\\n    }\\r\\n\\r\\n    struct Market {\\r\\n        uint256 id;\\r\\n        string question;\\r\\n        uint256 totalYesVotes;\\r\\n        uint256 totalNoVotes;\\r\\n        uint256 totalWinnings;\\r\\n        bytes[] encryptedVotes;\\r\\n        MarketOutcome outcome;\\r\\n        mapping(address => uint256) userVotes;\\r\\n        mapping(address => uint256) userWinnings;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => Market) public markets;\\r\\n\\r\\n    event MarketCreated(uint256 indexed id, string question);\\r\\n    event VotesBought(uint256 indexed id, address indexed buyer, uint256 amount, bool prediction);\\r\\n    event MarketResolved(uint256 indexed id, MarketOutcome outcome);\\r\\n    event WinningsClaimed(uint256 indexed id, address indexed claimer, uint256 amount);\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier marketExists(uint256 _marketId) {\\r\\n        require(_marketId > 0 && _marketId <= marketCount, \\\"Invalid market ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier marketNotResolved(uint256 _marketId) {\\r\\n        require(\\r\\n            markets[_marketId].outcome == MarketOutcome.NotResolved,\\r\\n            \\\"Market already resolved\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        marketCount = 0;\\r\\n    }\\r\\n\\r\\n    function createMarket(\\r\\n        string memory _question,\\r\\n        string memory _publicKey,\\r\\n        string memory _sharedSecret\\r\\n    ) external onlyOwner {\\r\\n        marketCount++;\\r\\n        Market storage newMarket = markets[marketCount];\\r\\n        newMarket.id = marketCount;\\r\\n        newMarket.question = _question;\\r\\n        newMarket.outcome = MarketOutcome.NotResolved;\\r\\n\\r\\n        Secrets storage secret = sharedSecret[marketCount];\\r\\n        secret.sharedSecret = _sharedSecret;\\r\\n        secret.publicKey = _publicKey;\\r\\n\\r\\n        emit MarketCreated(marketCount, _question);\\r\\n    }\\r\\n\\r\\n    function buyVotes(\\r\\n        uint256 _marketId,\\r\\n        bool _prediction,\\r\\n        bytes calldata _encryptedVote\\r\\n    ) external payable marketExists(_marketId) marketNotResolved(_marketId) {\\r\\n        require(msg.value > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\r\\n        Market storage market = markets[_marketId];\\r\\n        address buyer = msg.sender;\\r\\n\\r\\n        if (_prediction) {\\r\\n            market.totalYesVotes += msg.value;\\r\\n        } else {\\r\\n            market.totalNoVotes += msg.value;\\r\\n        }\\r\\n        market.encryptedVotes.push(_encryptedVote);\\r\\n        market.userVotes[buyer] += msg.value;\\r\\n        emit VotesBought(_marketId, buyer, msg.value, _prediction);\\r\\n    }\\r\\n\\r\\n    function resolveMarket(\\r\\n        uint256 _marketId,\\r\\n        bool _outcome\\r\\n    ) external onlyOwner marketExists(_marketId) marketNotResolved(_marketId) {\\r\\n        Market storage market = markets[_marketId];\\r\\n        market.totalWinnings = market.totalNoVotes + market.totalYesVotes;\\r\\n\\r\\n        if (_outcome) {\\r\\n            market.outcome = MarketOutcome.Yes;\\r\\n            emit MarketResolved(_marketId, MarketOutcome.Yes);\\r\\n        } else {\\r\\n            market.outcome = MarketOutcome.No;\\r\\n            emit MarketResolved(_marketId, MarketOutcome.No);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function claimWinnings(uint256 _marketId) external marketExists(_marketId) {\\r\\n        Market storage market = markets[_marketId];\\r\\n        require(market.outcome != MarketOutcome.NotResolved, \\\"Market not yet resolved\\\");\\r\\n\\r\\n        address claimer = msg.sender;\\r\\n        uint256 winnings = (market.userVotes[claimer] * market.totalWinnings) /\\r\\n            market.userVotes[claimer];\\r\\n        market.userWinnings[claimer] += winnings;\\r\\n\\r\\n        (bool success, ) = claimer.call{value: winnings}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n\\r\\n        emit WinningsClaimed(_marketId, claimer, winnings);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7961830bb78de80678062b037e7ab950db7fa9063534d27caa45db88798d3121\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600181905550611a8a806100686000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e3578063b1283e771461010e578063d96860ad14610150578063ec9790821461017957610070565b8063538953e21461007557806357bde44614610091578063677bd9ff146100ba575b600080fd5b61008f600480360381019061008a9190610cdd565b6101a4565b005b34801561009d57600080fd5b506100b860048036038101906100b39190610d51565b610415565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610d91565b610692565b005b3480156100ef57600080fd5b506100f8610974565b6040516101059190610dff565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610d91565b610998565b60405161014796959493929190610f30565b60405180910390f35b34801561015c57600080fd5b50610177600480360381019061017291906110c8565b610a69565b005b34801561018557600080fd5b5061018e610bf0565b60405161019b919061116f565b60405180910390f35b836000811180156101b757506001548111155b6101f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed906111d6565b60405180910390fd5b846000600281111561020b5761020a610eb9565b5b6003600083815260200190815260200160002060060160009054906101000a900460ff16600281111561024157610240610eb9565b5b14610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890611242565b60405180910390fd5b600034116102c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bb906112ae565b60405180910390fd5b60006003600088815260200190815260200160002090506000339050861561030657348260020160008282546102fa91906112fd565b92505081905550610322565b3482600301600082825461031a91906112fd565b925050819055505b81600501868690918060018154018082558091505060019003906000526020600020016000909192909192909192909192509182610361929190611548565b50348260070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103b391906112fd565b925050819055508073ffffffffffffffffffffffffffffffffffffffff16887f735db38119c48c40c947a31bde6bbf4fd861f73beeb74c6c8fd9173af13931d6348a604051610403929190611627565b60405180910390a35050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a906116c2565b60405180910390fd5b816000811180156104b657506001548111155b6104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec906111d6565b60405180910390fd5b826000600281111561050a57610509610eb9565b5b6003600083815260200190815260200160002060060160009054906101000a900460ff1660028111156105405761053f610eb9565b5b14610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790611242565b60405180910390fd5b6000600360008681526020019081526020016000209050806002015481600301546105ab91906112fd565b816004018190555083156106245760018160060160006101000a81548160ff021916908360028111156105e1576105e0610eb9565b5b0217905550847f739f283563fb51ab6b89ee95d937b2e63a6cfcb83c385dbebb629f9d97bd43e6600160405161061791906116e2565b60405180910390a261068b565b60028160060160006101000a81548160ff0219169083600281111561064c5761064b610eb9565b5b0217905550847f739f283563fb51ab6b89ee95d937b2e63a6cfcb83c385dbebb629f9d97bd43e6600260405161068291906116e2565b60405180910390a25b5050505050565b806000811180156106a557506001548111155b6106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db906111d6565b60405180910390fd5b60006003600084815260200190815260200160002090506000600281111561070f5761070e610eb9565b5b8160060160009054906101000a900460ff16600281111561073357610732610eb9565b5b03610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611749565b60405180910390fd5b600033905060008260070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600401548460070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461080d9190611769565b61081791906117da565b9050808360080160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461086a91906112fd565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516108979061183c565b60006040518083038185875af1925050503d80600081146108d4576040519150601f19603f3d011682016040523d82523d6000602084013e6108d9565b606091505b505090508061091d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109149061189d565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16867f5380cf6fe903b40c6d5a9e0dfbca2f3a423f0a21520b4d5947ed5169bdba946d84604051610964919061116f565b60405180910390a3505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000154908060010180546109c19061136b565b80601f01602080910402602001604051908101604052809291908181526020018280546109ed9061136b565b8015610a3a5780601f10610a0f57610100808354040283529160200191610a3a565b820191906000526020600020905b815481529060010190602001808311610a1d57829003601f168201915b5050505050908060020154908060030154908060040154908060060160009054906101000a900460ff16905086565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee906116c2565b60405180910390fd5b60016000815480929190610b0a906118bd565b919050555060006003600060015481526020019081526020016000209050600154816000018190555083816001019081610b449190611960565b5060008160060160006101000a81548160ff02191690836002811115610b6d57610b6c610eb9565b5b02179055506000600260006001548152602001908152602001600020905082816000019081610b9c9190611960565b5083816001019081610bae9190611960565b506001547f218577c5bc2b73a2bfcbd5e49be9f73d7baadac57a71efdffe54f3b4489cc0ab86604051610be19190611a32565b60405180910390a25050505050565b60015481565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610c1d81610c0a565b8114610c2857600080fd5b50565b600081359050610c3a81610c14565b92915050565b60008115159050919050565b610c5581610c40565b8114610c6057600080fd5b50565b600081359050610c7281610c4c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c9d57610c9c610c78565b5b8235905067ffffffffffffffff811115610cba57610cb9610c7d565b5b602083019150836001820283011115610cd657610cd5610c82565b5b9250929050565b60008060008060608587031215610cf757610cf6610c00565b5b6000610d0587828801610c2b565b9450506020610d1687828801610c63565b935050604085013567ffffffffffffffff811115610d3757610d36610c05565b5b610d4387828801610c87565b925092505092959194509250565b60008060408385031215610d6857610d67610c00565b5b6000610d7685828601610c2b565b9250506020610d8785828601610c63565b9150509250929050565b600060208284031215610da757610da6610c00565b5b6000610db584828501610c2b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de982610dbe565b9050919050565b610df981610dde565b82525050565b6000602082019050610e146000830184610df0565b92915050565b610e2381610c0a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e63578082015181840152602081019050610e48565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e8b82610e29565b610e958185610e34565b9350610ea5818560208601610e45565b610eae81610e6f565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610ef957610ef8610eb9565b5b50565b6000819050610f0a82610ee8565b919050565b6000610f1a82610efc565b9050919050565b610f2a81610f0f565b82525050565b600060c082019050610f456000830189610e1a565b8181036020830152610f578188610e80565b9050610f666040830187610e1a565b610f736060830186610e1a565b610f806080830185610e1a565b610f8d60a0830184610f21565b979650505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd582610e6f565b810181811067ffffffffffffffff82111715610ff457610ff3610f9d565b5b80604052505050565b6000611007610bf6565b90506110138282610fcc565b919050565b600067ffffffffffffffff82111561103357611032610f9d565b5b61103c82610e6f565b9050602081019050919050565b82818337600083830152505050565b600061106b61106684611018565b610ffd565b90508281526020810184848401111561108757611086610f98565b5b611092848285611049565b509392505050565b600082601f8301126110af576110ae610c78565b5b81356110bf848260208601611058565b91505092915050565b6000806000606084860312156110e1576110e0610c00565b5b600084013567ffffffffffffffff8111156110ff576110fe610c05565b5b61110b8682870161109a565b935050602084013567ffffffffffffffff81111561112c5761112b610c05565b5b6111388682870161109a565b925050604084013567ffffffffffffffff81111561115957611158610c05565b5b6111658682870161109a565b9150509250925092565b60006020820190506111846000830184610e1a565b92915050565b7f496e76616c6964206d61726b6574204944000000000000000000000000000000600082015250565b60006111c0601183610e34565b91506111cb8261118a565b602082019050919050565b600060208201905081810360008301526111ef816111b3565b9050919050565b7f4d61726b657420616c7265616479207265736f6c766564000000000000000000600082015250565b600061122c601783610e34565b9150611237826111f6565b602082019050919050565b6000602082019050818103600083015261125b8161121f565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000611298601d83610e34565b91506112a382611262565b602082019050919050565b600060208201905081810360008301526112c78161128b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061130882610c0a565b915061131383610c0a565b925082820190508082111561132b5761132a6112ce565b5b92915050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138357607f821691505b6020821081036113965761139561133c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113c1565b61140886836113c1565b95508019841693508086168417925050509392505050565b6000819050919050565b600061144561144061143b84610c0a565b611420565b610c0a565b9050919050565b6000819050919050565b61145f8361142a565b61147361146b8261144c565b8484546113ce565b825550505050565b600090565b61148861147b565b611493818484611456565b505050565b5b818110156114b7576114ac600082611480565b600181019050611499565b5050565b601f8211156114fc576114cd8161139c565b6114d6846113b1565b810160208510156114e5578190505b6114f96114f1856113b1565b830182611498565b50505b505050565b600082821c905092915050565b600061151f60001984600802611501565b1980831691505092915050565b6000611538838361150e565b9150826002028217905092915050565b6115528383611331565b67ffffffffffffffff81111561156b5761156a610f9d565b5b611575825461136b565b6115808282856114bb565b6000601f8311600181146115af576000841561159d578287013590505b6115a7858261152c565b86555061160f565b601f1984166115bd8661139c565b60005b828110156115e5578489013582556001820191506020850194506020810190506115c0565b8683101561160257848901356115fe601f89168261150e565b8355505b6001600288020188555050505b50505050505050565b61162181610c40565b82525050565b600060408201905061163c6000830185610e1a565b6116496020830184611618565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b60006116ac602583610e34565b91506116b782611650565b604082019050919050565b600060208201905081810360008301526116db8161169f565b9050919050565b60006020820190506116f76000830184610f21565b92915050565b7f4d61726b6574206e6f7420796574207265736f6c766564000000000000000000600082015250565b6000611733601783610e34565b915061173e826116fd565b602082019050919050565b6000602082019050818103600083015261176281611726565b9050919050565b600061177482610c0a565b915061177f83610c0a565b925082820261178d81610c0a565b915082820484148315176117a4576117a36112ce565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117e582610c0a565b91506117f083610c0a565b925082611800576117ff6117ab565b5b828204905092915050565b600081905092915050565b50565b600061182660008361180b565b915061183182611816565b600082019050919050565b600061184782611819565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611887600f83610e34565b915061189282611851565b602082019050919050565b600060208201905081810360008301526118b68161187a565b9050919050565b60006118c882610c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118fa576118f96112ce565b5b600182019050919050565b60008190508160005260206000209050919050565b601f82111561195b5761192c81611905565b611935846113b1565b81016020851015611944578190505b611958611950856113b1565b830182611498565b50505b505050565b61196982610e29565b67ffffffffffffffff81111561198257611981610f9d565b5b61198c825461136b565b61199782828561191a565b600060209050601f8311600181146119ca57600084156119b8578287015190505b6119c2858261152c565b865550611a2a565b601f1984166119d886611905565b60005b82811015611a00578489015182556001820191506020850194506020810190506119db565b86831015611a1d5784890151611a19601f89168261150e565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152611a4c8184610e80565b90509291505056fea2646970667358221220af7925788b13ae3076ea9ec901e5f99501d5c1edc8a2cde0df31840bc4c5eb4a64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e3578063b1283e771461010e578063d96860ad14610150578063ec9790821461017957610070565b8063538953e21461007557806357bde44614610091578063677bd9ff146100ba575b600080fd5b61008f600480360381019061008a9190610cdd565b6101a4565b005b34801561009d57600080fd5b506100b860048036038101906100b39190610d51565b610415565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610d91565b610692565b005b3480156100ef57600080fd5b506100f8610974565b6040516101059190610dff565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610d91565b610998565b60405161014796959493929190610f30565b60405180910390f35b34801561015c57600080fd5b50610177600480360381019061017291906110c8565b610a69565b005b34801561018557600080fd5b5061018e610bf0565b60405161019b919061116f565b60405180910390f35b836000811180156101b757506001548111155b6101f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed906111d6565b60405180910390fd5b846000600281111561020b5761020a610eb9565b5b6003600083815260200190815260200160002060060160009054906101000a900460ff16600281111561024157610240610eb9565b5b14610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890611242565b60405180910390fd5b600034116102c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bb906112ae565b60405180910390fd5b60006003600088815260200190815260200160002090506000339050861561030657348260020160008282546102fa91906112fd565b92505081905550610322565b3482600301600082825461031a91906112fd565b925050819055505b81600501868690918060018154018082558091505060019003906000526020600020016000909192909192909192909192509182610361929190611548565b50348260070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103b391906112fd565b925050819055508073ffffffffffffffffffffffffffffffffffffffff16887f735db38119c48c40c947a31bde6bbf4fd861f73beeb74c6c8fd9173af13931d6348a604051610403929190611627565b60405180910390a35050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a906116c2565b60405180910390fd5b816000811180156104b657506001548111155b6104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec906111d6565b60405180910390fd5b826000600281111561050a57610509610eb9565b5b6003600083815260200190815260200160002060060160009054906101000a900460ff1660028111156105405761053f610eb9565b5b14610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790611242565b60405180910390fd5b6000600360008681526020019081526020016000209050806002015481600301546105ab91906112fd565b816004018190555083156106245760018160060160006101000a81548160ff021916908360028111156105e1576105e0610eb9565b5b0217905550847f739f283563fb51ab6b89ee95d937b2e63a6cfcb83c385dbebb629f9d97bd43e6600160405161061791906116e2565b60405180910390a261068b565b60028160060160006101000a81548160ff0219169083600281111561064c5761064b610eb9565b5b0217905550847f739f283563fb51ab6b89ee95d937b2e63a6cfcb83c385dbebb629f9d97bd43e6600260405161068291906116e2565b60405180910390a25b5050505050565b806000811180156106a557506001548111155b6106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db906111d6565b60405180910390fd5b60006003600084815260200190815260200160002090506000600281111561070f5761070e610eb9565b5b8160060160009054906101000a900460ff16600281111561073357610732610eb9565b5b03610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611749565b60405180910390fd5b600033905060008260070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483600401548460070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461080d9190611769565b61081791906117da565b9050808360080160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461086a91906112fd565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516108979061183c565b60006040518083038185875af1925050503d80600081146108d4576040519150601f19603f3d011682016040523d82523d6000602084013e6108d9565b606091505b505090508061091d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109149061189d565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16867f5380cf6fe903b40c6d5a9e0dfbca2f3a423f0a21520b4d5947ed5169bdba946d84604051610964919061116f565b60405180910390a3505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000154908060010180546109c19061136b565b80601f01602080910402602001604051908101604052809291908181526020018280546109ed9061136b565b8015610a3a5780601f10610a0f57610100808354040283529160200191610a3a565b820191906000526020600020905b815481529060010190602001808311610a1d57829003601f168201915b5050505050908060020154908060030154908060040154908060060160009054906101000a900460ff16905086565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee906116c2565b60405180910390fd5b60016000815480929190610b0a906118bd565b919050555060006003600060015481526020019081526020016000209050600154816000018190555083816001019081610b449190611960565b5060008160060160006101000a81548160ff02191690836002811115610b6d57610b6c610eb9565b5b02179055506000600260006001548152602001908152602001600020905082816000019081610b9c9190611960565b5083816001019081610bae9190611960565b506001547f218577c5bc2b73a2bfcbd5e49be9f73d7baadac57a71efdffe54f3b4489cc0ab86604051610be19190611a32565b60405180910390a25050505050565b60015481565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610c1d81610c0a565b8114610c2857600080fd5b50565b600081359050610c3a81610c14565b92915050565b60008115159050919050565b610c5581610c40565b8114610c6057600080fd5b50565b600081359050610c7281610c4c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c9d57610c9c610c78565b5b8235905067ffffffffffffffff811115610cba57610cb9610c7d565b5b602083019150836001820283011115610cd657610cd5610c82565b5b9250929050565b60008060008060608587031215610cf757610cf6610c00565b5b6000610d0587828801610c2b565b9450506020610d1687828801610c63565b935050604085013567ffffffffffffffff811115610d3757610d36610c05565b5b610d4387828801610c87565b925092505092959194509250565b60008060408385031215610d6857610d67610c00565b5b6000610d7685828601610c2b565b9250506020610d8785828601610c63565b9150509250929050565b600060208284031215610da757610da6610c00565b5b6000610db584828501610c2b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de982610dbe565b9050919050565b610df981610dde565b82525050565b6000602082019050610e146000830184610df0565b92915050565b610e2381610c0a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e63578082015181840152602081019050610e48565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e8b82610e29565b610e958185610e34565b9350610ea5818560208601610e45565b610eae81610e6f565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610ef957610ef8610eb9565b5b50565b6000819050610f0a82610ee8565b919050565b6000610f1a82610efc565b9050919050565b610f2a81610f0f565b82525050565b600060c082019050610f456000830189610e1a565b8181036020830152610f578188610e80565b9050610f666040830187610e1a565b610f736060830186610e1a565b610f806080830185610e1a565b610f8d60a0830184610f21565b979650505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd582610e6f565b810181811067ffffffffffffffff82111715610ff457610ff3610f9d565b5b80604052505050565b6000611007610bf6565b90506110138282610fcc565b919050565b600067ffffffffffffffff82111561103357611032610f9d565b5b61103c82610e6f565b9050602081019050919050565b82818337600083830152505050565b600061106b61106684611018565b610ffd565b90508281526020810184848401111561108757611086610f98565b5b611092848285611049565b509392505050565b600082601f8301126110af576110ae610c78565b5b81356110bf848260208601611058565b91505092915050565b6000806000606084860312156110e1576110e0610c00565b5b600084013567ffffffffffffffff8111156110ff576110fe610c05565b5b61110b8682870161109a565b935050602084013567ffffffffffffffff81111561112c5761112b610c05565b5b6111388682870161109a565b925050604084013567ffffffffffffffff81111561115957611158610c05565b5b6111658682870161109a565b9150509250925092565b60006020820190506111846000830184610e1a565b92915050565b7f496e76616c6964206d61726b6574204944000000000000000000000000000000600082015250565b60006111c0601183610e34565b91506111cb8261118a565b602082019050919050565b600060208201905081810360008301526111ef816111b3565b9050919050565b7f4d61726b657420616c7265616479207265736f6c766564000000000000000000600082015250565b600061122c601783610e34565b9150611237826111f6565b602082019050919050565b6000602082019050818103600083015261125b8161121f565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000611298601d83610e34565b91506112a382611262565b602082019050919050565b600060208201905081810360008301526112c78161128b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061130882610c0a565b915061131383610c0a565b925082820190508082111561132b5761132a6112ce565b5b92915050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061138357607f821691505b6020821081036113965761139561133c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113c1565b61140886836113c1565b95508019841693508086168417925050509392505050565b6000819050919050565b600061144561144061143b84610c0a565b611420565b610c0a565b9050919050565b6000819050919050565b61145f8361142a565b61147361146b8261144c565b8484546113ce565b825550505050565b600090565b61148861147b565b611493818484611456565b505050565b5b818110156114b7576114ac600082611480565b600181019050611499565b5050565b601f8211156114fc576114cd8161139c565b6114d6846113b1565b810160208510156114e5578190505b6114f96114f1856113b1565b830182611498565b50505b505050565b600082821c905092915050565b600061151f60001984600802611501565b1980831691505092915050565b6000611538838361150e565b9150826002028217905092915050565b6115528383611331565b67ffffffffffffffff81111561156b5761156a610f9d565b5b611575825461136b565b6115808282856114bb565b6000601f8311600181146115af576000841561159d578287013590505b6115a7858261152c565b86555061160f565b601f1984166115bd8661139c565b60005b828110156115e5578489013582556001820191506020850194506020810190506115c0565b8683101561160257848901356115fe601f89168261150e565b8355505b6001600288020188555050505b50505050505050565b61162181610c40565b82525050565b600060408201905061163c6000830185610e1a565b6116496020830184611618565b9392505050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b60006116ac602583610e34565b91506116b782611650565b604082019050919050565b600060208201905081810360008301526116db8161169f565b9050919050565b60006020820190506116f76000830184610f21565b92915050565b7f4d61726b6574206e6f7420796574207265736f6c766564000000000000000000600082015250565b6000611733601783610e34565b915061173e826116fd565b602082019050919050565b6000602082019050818103600083015261176281611726565b9050919050565b600061177482610c0a565b915061177f83610c0a565b925082820261178d81610c0a565b915082820484148315176117a4576117a36112ce565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117e582610c0a565b91506117f083610c0a565b925082611800576117ff6117ab565b5b828204905092915050565b600081905092915050565b50565b600061182660008361180b565b915061183182611816565b600082019050919050565b600061184782611819565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000611887600f83610e34565b915061189282611851565b602082019050919050565b600060208201905081810360008301526118b68161187a565b9050919050565b60006118c882610c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118fa576118f96112ce565b5b600182019050919050565b60008190508160005260206000209050919050565b601f82111561195b5761192c81611905565b611935846113b1565b81016020851015611944578190505b611958611950856113b1565b830182611498565b50505b505050565b61196982610e29565b67ffffffffffffffff81111561198257611981610f9d565b5b61198c825461136b565b61199782828561191a565b600060209050601f8311600181146119ca57600084156119b8578287015190505b6119c2858261152c565b865550611a2a565b601f1984166119d886611905565b60005b82811015611a00578489015182556001820191506020850194506020810190506119db565b86831015611a1d5784890151611a19601f89168261150e565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152611a4c8184610e80565b90509291505056fea2646970667358221220af7925788b13ae3076ea9ec901e5f99501d5c1edc8a2cde0df31840bc4c5eb4a64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/PredictionMarket.sol:PredictionMarket",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5,
        "contract": "contracts/PredictionMarket.sol:PredictionMarket",
        "label": "marketCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 15,
        "contract": "contracts/PredictionMarket.sol:PredictionMarket",
        "label": "sharedSecret",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Secrets)10_storage)"
      },
      {
        "astId": 49,
        "contract": "contracts/PredictionMarket.sol:PredictionMarket",
        "label": "markets",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Market)44_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(MarketOutcome)19": {
        "encoding": "inplace",
        "label": "enum PredictionMarket.MarketOutcome",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Market)44_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PredictionMarket.Market)",
        "numberOfBytes": "32",
        "value": "t_struct(Market)44_storage"
      },
      "t_mapping(t_uint256,t_struct(Secrets)10_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PredictionMarket.Secrets)",
        "numberOfBytes": "32",
        "value": "t_struct(Secrets)10_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Market)44_storage": {
        "encoding": "inplace",
        "label": "struct PredictionMarket.Market",
        "members": [
          {
            "astId": 21,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "question",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 25,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "totalYesVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 27,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "totalNoVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 29,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "totalWinnings",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "encryptedVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 35,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "outcome",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(MarketOutcome)19"
          },
          {
            "astId": 39,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "userVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 43,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "userWinnings",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Secrets)10_storage": {
        "encoding": "inplace",
        "label": "struct PredictionMarket.Secrets",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "sharedSecret",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "publicKey",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}