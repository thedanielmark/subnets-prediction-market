{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "VotingClosed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "quorum",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "open",
          "type": "bool"
        }
      ],
      "name": "getAllProposals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "quorum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            },
            {
              "internalType": "bytes[]",
              "name": "encryptedVotes",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct PredictionMarket.ProposalInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "quorum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6ec1ae25ccc63d80e80a89dfbfe4b5f4a5fc3b713b38e8da8f45cce119428818",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1426624",
    "logsBloom": "0x
    "blockHash": "0x5114bbac4ee35d5e52b2422a6e8f9d93c0c04e74c30fae8085cba04aca08cba7",
    "transactionHash": "0x6ec1ae25ccc63d80e80a89dfbfe4b5f4a5fc3b713b38e8da8f45cce119428818",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1426624",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "25afb4638c7ca41a9c1814f079e0e681",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"VotingClosed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"getAllProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"encryptedVotes\",\"type\":\"bytes[]\"}],\"internalType\":\"struct PredictionMarket.ProposalInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PredictionMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ncontract PredictionMarket {\\r\\n    event ProposalCreated(uint indexed proposalId, string description);\\r\\n    event Voted(uint indexed proposalId, address indexed voter, bytes encryptedVote);\\r\\n    event VotingClosed(uint indexed proposalId);\\r\\n\\r\\n    struct Proposal {\\r\\n        uint id; \\r\\n        string description;\\r\\n        mapping(address => bool) hasVoted;\\r\\n        bytes[] encryptedVotes;\\r\\n        string[] decryptedVotes;\\r\\n        uint quorum;\\r\\n        uint voteCount;\\r\\n    }\\r\\n\\r\\n    mapping(uint => Proposal) public proposals;\\r\\n    uint public nextProposalId = 1;\\r\\n\\r\\n    function createProposal(string memory description, uint quorum) external returns (uint proposalId) {\\r\\n        proposalId = nextProposalId;\\r\\n        nextProposalId++;\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        proposal.id = proposalId;\\r\\n        proposal.description = description;\\r\\n        proposal.quorum = quorum;\\r\\n        emit ProposalCreated(proposalId, description);\\r\\n    }\\r\\n\\r\\n    function getProposal(uint proposalId) external view returns (uint, string memory, uint, uint) {\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        return (proposal.id, proposal.description, proposal.quorum, proposal.voteCount);\\r\\n    }\\r\\n\\r\\n    function vote(uint proposalId, bytes calldata encryptedVote) external {\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        require(!proposal.hasVoted[msg.sender], \\\"Already voted\\\");\\r\\n        require(proposal.voteCount < proposal.quorum, \\\"Voting closed\\\");\\r\\n\\r\\n        proposal.encryptedVotes.push(encryptedVote);\\r\\n        proposal.hasVoted[msg.sender] = true;\\r\\n        proposal.voteCount++;\\r\\n\\r\\n        emit Voted(proposalId, msg.sender, encryptedVote);\\r\\n\\r\\n        if (proposal.voteCount >= proposal.quorum) {\\r\\n            emit VotingClosed(proposalId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getVotes(uint proposalId) external view returns (bytes[] memory) {\\r\\n        return proposals[proposalId].encryptedVotes;\\r\\n    }\\r\\n\\r\\n    struct ProposalInfo {\\r\\n        uint id;\\r\\n        string description;\\r\\n        uint quorum;\\r\\n        uint voteCount;\\r\\n        bytes[] encryptedVotes;\\r\\n    }\\r\\n\\r\\n    function getAllProposals(bool open) external view returns (ProposalInfo[] memory) {\\r\\n        uint count = 0;\\r\\n        for (uint i = 1; i < nextProposalId; i++) {\\r\\n            if ((proposals[i].voteCount < proposals[i].quorum) == open) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        ProposalInfo[] memory proposalsInfo = new ProposalInfo[](count);\\r\\n        uint index = 0;\\r\\n        for (uint i = 1; i < nextProposalId; i++) {\\r\\n            if ((proposals[i].voteCount < proposals[i].quorum) == open) {\\r\\n                Proposal storage proposal = proposals[i];\\r\\n                proposalsInfo[index] = ProposalInfo({\\r\\n                    id: proposal.id,\\r\\n                    description: proposal.description,\\r\\n                    quorum: proposal.quorum,\\r\\n                    voteCount: proposal.voteCount,\\r\\n                    encryptedVotes: open ? new bytes[](0) : proposal.encryptedVotes\\r\\n                });\\r\\n                index++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return proposalsInfo;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xcb9fe817f9a1c7e050be7c98382d731b5ee74e9746462cfccab39b5efb4e5b16\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001805534801561001457600080fd5b5061187e806100246000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b88b82ba1161005b578063b88b82ba14610103578063c7f758a81461011f578063ccac811514610152578063ff981099146101825761007d565b8063013cf08b146100825780632ab09d14146100b557806335facf78146100d3575b600080fd5b61009c60048036038101906100979190610ad0565b6101b2565b6040516100ac9493929190610b9c565b60405180910390f35b6100bd61026a565b6040516100ca9190610be8565b60405180910390f35b6100ed60048036038101906100e89190610d38565b610270565b6040516100fa9190610be8565b60405180910390f35b61011d60048036038101906101189190610df4565b610308565b005b61013960048036038101906101349190610ad0565b61053f565b6040516101499493929190610b9c565b60405180910390f35b61016c60048036038101906101679190610e8c565b61060b565b6040516101799190611168565b60405180910390f35b61019c60048036038101906101979190610ad0565b610969565b6040516101a99190611210565b60405180910390f35b60006020528060005260406000206000915090508060000154908060010180546101db90611261565b80601f016020809104026020016040519081016040528092919081815260200182805461020790611261565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050908060050154908060060154905084565b60015481565b600060015490506001600081548092919061028a906112c1565b919050555060008060008381526020019081526020016000209050818160000181905550838160010190816102bf91906114b5565b50828160050181905550817f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432856040516102f99190611587565b60405180910390a25092915050565b600080600085815260200190815260200160002090508060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a4906115f5565b60405180910390fd5b80600501548160060154106103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ee90611661565b60405180910390fd5b806003018383909180600181540180825580915050600190039060005260206000200160009091929091929091929091925091826104369291906116e7565b5060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060060160008154809291906104a6906112c1565b91905055503373ffffffffffffffffffffffffffffffffffffffff16847f0aa382db139349751d2b57a2da636b9a7335a30ae382775d4c1c7bc92e9b6a3285856040516104f49291906117f5565b60405180910390a3806005015481600601541061053957837f8e9b46a70b3967bc9ea56ca61732c363a191fac88ae3ba011f4e030711c9011760405160405180910390a25b50505050565b60006060600080600080600087815260200190815260200160002090508060000154816001018260050154836006015482805461057b90611261565b80601f01602080910402602001604051908101604052809291908181526020018280546105a790611261565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505092509450945094509450509193509193565b6060600080600190505b60015481101561067857831515600080838152602001908152602001600020600501546000808481526020019081526020016000206006015410151503610665578180610661906112c1565b9250505b8080610670906112c1565b915050610615565b5060008167ffffffffffffffff81111561069557610694610c0d565b5b6040519080825280602002602001820160405280156106ce57816020015b6106bb610a57565b8152602001906001900390816106b35790505b509050600080600190505b60015481101561095d5785151560008083815260200190815260200160002060050154600080848152602001908152602001600020600601541015150361094a57600080600083815260200190815260200160002090506040518060a001604052808260000154815260200182600101805461075490611261565b80601f016020809104026020016040519081016040528092919081815260200182805461078090611261565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b505050505081526020018260050154815260200182600601548152602001886108c95782600301805480602002602001604051908101604052809291908181526020016000905b828210156108c057838290600052602060002001805461083390611261565b80601f016020809104026020016040519081016040528092919081815260200182805461085f90611261565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b505050505081526020019060010190610814565b50505050610919565b600067ffffffffffffffff8111156108e4576108e3610c0d565b5b60405190808252806020026020018201604052801561091757816020015b60608152602001906001900390816109025790505b505b81525084848151811061092f5761092e611819565b5b60200260200101819052508280610945906112c1565b935050505b8080610955906112c1565b9150506106d9565b50819350505050919050565b6060600080838152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015610a4c5783829060005260206000200180546109bf90611261565b80601f01602080910402602001604051908101604052809291908181526020018280546109eb90611261565b8015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b5050505050815260200190600101906109a0565b505050509050919050565b6040518060a0016040528060008152602001606081526020016000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610aad81610a9a565b8114610ab857600080fd5b50565b600081359050610aca81610aa4565b92915050565b600060208284031215610ae657610ae5610a90565b5b6000610af484828501610abb565b91505092915050565b610b0681610a9a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b46578082015181840152602081019050610b2b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b6e82610b0c565b610b788185610b17565b9350610b88818560208601610b28565b610b9181610b52565b840191505092915050565b6000608082019050610bb16000830187610afd565b8181036020830152610bc38186610b63565b9050610bd26040830185610afd565b610bdf6060830184610afd565b95945050505050565b6000602082019050610bfd6000830184610afd565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c4582610b52565b810181811067ffffffffffffffff82111715610c6457610c63610c0d565b5b80604052505050565b6000610c77610a86565b9050610c838282610c3c565b919050565b600067ffffffffffffffff821115610ca357610ca2610c0d565b5b610cac82610b52565b9050602081019050919050565b82818337600083830152505050565b6000610cdb610cd684610c88565b610c6d565b905082815260208101848484011115610cf757610cf6610c08565b5b610d02848285610cb9565b509392505050565b600082601f830112610d1f57610d1e610c03565b5b8135610d2f848260208601610cc8565b91505092915050565b60008060408385031215610d4f57610d4e610a90565b5b600083013567ffffffffffffffff811115610d6d57610d6c610a95565b5b610d7985828601610d0a565b9250506020610d8a85828601610abb565b9150509250929050565b600080fd5b600080fd5b60008083601f840112610db457610db3610c03565b5b8235905067ffffffffffffffff811115610dd157610dd0610d94565b5b602083019150836001820283011115610ded57610dec610d99565b5b9250929050565b600080600060408486031215610e0d57610e0c610a90565b5b6000610e1b86828701610abb565b935050602084013567ffffffffffffffff811115610e3c57610e3b610a95565b5b610e4886828701610d9e565b92509250509250925092565b60008115159050919050565b610e6981610e54565b8114610e7457600080fd5b50565b600081359050610e8681610e60565b92915050565b600060208284031215610ea257610ea1610a90565b5b6000610eb084828501610e77565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610eee81610a9a565b82525050565b600082825260208201905092915050565b6000610f1082610b0c565b610f1a8185610ef4565b9350610f2a818560208601610b28565b610f3381610b52565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000610f9182610f6a565b610f9b8185610f75565b9350610fab818560208601610b28565b610fb481610b52565b840191505092915050565b6000610fcb8383610f86565b905092915050565b6000602082019050919050565b6000610feb82610f3e565b610ff58185610f49565b93508360208202850161100785610f5a565b8060005b8581101561104357848403895281516110248582610fbf565b945061102f83610fd3565b925060208a0199505060018101905061100b565b50829750879550505050505092915050565b600060a08301600083015161106d6000860182610ee5565b50602083015184820360208601526110858282610f05565b915050604083015161109a6040860182610ee5565b5060608301516110ad6060860182610ee5565b50608083015184820360808601526110c58282610fe0565b9150508091505092915050565b60006110de8383611055565b905092915050565b6000602082019050919050565b60006110fe82610eb9565b6111088185610ec4565b93508360208202850161111a85610ed5565b8060005b85811015611156578484038952815161113785826110d2565b9450611142836110e6565b925060208a0199505060018101905061111e565b50829750879550505050505092915050565b6000602082019050818103600083015261118281846110f3565b905092915050565b600082825260208201905092915050565b60006111a682610f3e565b6111b0818561118a565b9350836020820285016111c285610f5a565b8060005b858110156111fe57848403895281516111df8582610fbf565b94506111ea83610fd3565b925060208a019950506001810190506111c6565b50829750879550505050505092915050565b6000602082019050818103600083015261122a818461119b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061127957607f821691505b60208210810361128c5761128b611232565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112cc82610a9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112fe576112fd611292565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261136b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261132e565b611375868361132e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006113b26113ad6113a884610a9a565b61138d565b610a9a565b9050919050565b6000819050919050565b6113cc83611397565b6113e06113d8826113b9565b84845461133b565b825550505050565b600090565b6113f56113e8565b6114008184846113c3565b505050565b5b81811015611424576114196000826113ed565b600181019050611406565b5050565b601f8211156114695761143a81611309565b6114438461131e565b81016020851015611452578190505b61146661145e8561131e565b830182611405565b50505b505050565b600082821c905092915050565b600061148c6000198460080261146e565b1980831691505092915050565b60006114a5838361147b565b9150826002028217905092915050565b6114be82610b0c565b67ffffffffffffffff8111156114d7576114d6610c0d565b5b6114e18254611261565b6114ec828285611428565b600060209050601f83116001811461151f576000841561150d578287015190505b6115178582611499565b86555061157f565b601f19841661152d86611309565b60005b8281101561155557848901518255600182019150602085019450602081019050611530565b86831015611572578489015161156e601f89168261147b565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526115a18184610b63565b905092915050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b60006115df600d83610b17565b91506115ea826115a9565b602082019050919050565b6000602082019050818103600083015261160e816115d2565b9050919050565b7f566f74696e6720636c6f73656400000000000000000000000000000000000000600082015250565b600061164b600d83610b17565b915061165682611615565b602082019050919050565b6000602082019050818103600083015261167a8161163e565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b601f8211156116e2576116b38161168c565b6116bc8461131e565b810160208510156116cb578190505b6116df6116d78561131e565b830182611405565b50505b505050565b6116f18383611681565b67ffffffffffffffff81111561170a57611709610c0d565b5b6117148254611261565b61171f8282856116a1565b6000601f83116001811461174e576000841561173c578287013590505b6117468582611499565b8655506117ae565b601f19841661175c8661168c565b60005b828110156117845784890135825560018201915060208501945060208101905061175f565b868310156117a1578489013561179d601f89168261147b565b8355505b6001600288020188555050505b50505050505050565b600082825260208201905092915050565b60006117d483856117b7565b93506117e1838584610cb9565b6117ea83610b52565b840190509392505050565b600060208201905081810360008301526118108184866117c8565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220913cff3363b04284b4b5ec3da8ee8abcb4a332cadc2da65adca989eaa319674e64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b88b82ba1161005b578063b88b82ba14610103578063c7f758a81461011f578063ccac811514610152578063ff981099146101825761007d565b8063013cf08b146100825780632ab09d14146100b557806335facf78146100d3575b600080fd5b61009c60048036038101906100979190610ad0565b6101b2565b6040516100ac9493929190610b9c565b60405180910390f35b6100bd61026a565b6040516100ca9190610be8565b60405180910390f35b6100ed60048036038101906100e89190610d38565b610270565b6040516100fa9190610be8565b60405180910390f35b61011d60048036038101906101189190610df4565b610308565b005b61013960048036038101906101349190610ad0565b61053f565b6040516101499493929190610b9c565b60405180910390f35b61016c60048036038101906101679190610e8c565b61060b565b6040516101799190611168565b60405180910390f35b61019c60048036038101906101979190610ad0565b610969565b6040516101a99190611210565b60405180910390f35b60006020528060005260406000206000915090508060000154908060010180546101db90611261565b80601f016020809104026020016040519081016040528092919081815260200182805461020790611261565b80156102545780601f1061022957610100808354040283529160200191610254565b820191906000526020600020905b81548152906001019060200180831161023757829003601f168201915b5050505050908060050154908060060154905084565b60015481565b600060015490506001600081548092919061028a906112c1565b919050555060008060008381526020019081526020016000209050818160000181905550838160010190816102bf91906114b5565b50828160050181905550817f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432856040516102f99190611587565b60405180910390a25092915050565b600080600085815260200190815260200160002090508060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a4906115f5565b60405180910390fd5b80600501548160060154106103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ee90611661565b60405180910390fd5b806003018383909180600181540180825580915050600190039060005260206000200160009091929091929091929091925091826104369291906116e7565b5060018160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060060160008154809291906104a6906112c1565b91905055503373ffffffffffffffffffffffffffffffffffffffff16847f0aa382db139349751d2b57a2da636b9a7335a30ae382775d4c1c7bc92e9b6a3285856040516104f49291906117f5565b60405180910390a3806005015481600601541061053957837f8e9b46a70b3967bc9ea56ca61732c363a191fac88ae3ba011f4e030711c9011760405160405180910390a25b50505050565b60006060600080600080600087815260200190815260200160002090508060000154816001018260050154836006015482805461057b90611261565b80601f01602080910402602001604051908101604052809291908181526020018280546105a790611261565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505092509450945094509450509193509193565b6060600080600190505b60015481101561067857831515600080838152602001908152602001600020600501546000808481526020019081526020016000206006015410151503610665578180610661906112c1565b9250505b8080610670906112c1565b915050610615565b5060008167ffffffffffffffff81111561069557610694610c0d565b5b6040519080825280602002602001820160405280156106ce57816020015b6106bb610a57565b8152602001906001900390816106b35790505b509050600080600190505b60015481101561095d5785151560008083815260200190815260200160002060050154600080848152602001908152602001600020600601541015150361094a57600080600083815260200190815260200160002090506040518060a001604052808260000154815260200182600101805461075490611261565b80601f016020809104026020016040519081016040528092919081815260200182805461078090611261565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b505050505081526020018260050154815260200182600601548152602001886108c95782600301805480602002602001604051908101604052809291908181526020016000905b828210156108c057838290600052602060002001805461083390611261565b80601f016020809104026020016040519081016040528092919081815260200182805461085f90611261565b80156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b505050505081526020019060010190610814565b50505050610919565b600067ffffffffffffffff8111156108e4576108e3610c0d565b5b60405190808252806020026020018201604052801561091757816020015b60608152602001906001900390816109025790505b505b81525084848151811061092f5761092e611819565b5b60200260200101819052508280610945906112c1565b935050505b8080610955906112c1565b9150506106d9565b50819350505050919050565b6060600080838152602001908152602001600020600301805480602002602001604051908101604052809291908181526020016000905b82821015610a4c5783829060005260206000200180546109bf90611261565b80601f01602080910402602001604051908101604052809291908181526020018280546109eb90611261565b8015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b5050505050815260200190600101906109a0565b505050509050919050565b6040518060a0016040528060008152602001606081526020016000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610aad81610a9a565b8114610ab857600080fd5b50565b600081359050610aca81610aa4565b92915050565b600060208284031215610ae657610ae5610a90565b5b6000610af484828501610abb565b91505092915050565b610b0681610a9a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b46578082015181840152602081019050610b2b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b6e82610b0c565b610b788185610b17565b9350610b88818560208601610b28565b610b9181610b52565b840191505092915050565b6000608082019050610bb16000830187610afd565b8181036020830152610bc38186610b63565b9050610bd26040830185610afd565b610bdf6060830184610afd565b95945050505050565b6000602082019050610bfd6000830184610afd565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c4582610b52565b810181811067ffffffffffffffff82111715610c6457610c63610c0d565b5b80604052505050565b6000610c77610a86565b9050610c838282610c3c565b919050565b600067ffffffffffffffff821115610ca357610ca2610c0d565b5b610cac82610b52565b9050602081019050919050565b82818337600083830152505050565b6000610cdb610cd684610c88565b610c6d565b905082815260208101848484011115610cf757610cf6610c08565b5b610d02848285610cb9565b509392505050565b600082601f830112610d1f57610d1e610c03565b5b8135610d2f848260208601610cc8565b91505092915050565b60008060408385031215610d4f57610d4e610a90565b5b600083013567ffffffffffffffff811115610d6d57610d6c610a95565b5b610d7985828601610d0a565b9250506020610d8a85828601610abb565b9150509250929050565b600080fd5b600080fd5b60008083601f840112610db457610db3610c03565b5b8235905067ffffffffffffffff811115610dd157610dd0610d94565b5b602083019150836001820283011115610ded57610dec610d99565b5b9250929050565b600080600060408486031215610e0d57610e0c610a90565b5b6000610e1b86828701610abb565b935050602084013567ffffffffffffffff811115610e3c57610e3b610a95565b5b610e4886828701610d9e565b92509250509250925092565b60008115159050919050565b610e6981610e54565b8114610e7457600080fd5b50565b600081359050610e8681610e60565b92915050565b600060208284031215610ea257610ea1610a90565b5b6000610eb084828501610e77565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610eee81610a9a565b82525050565b600082825260208201905092915050565b6000610f1082610b0c565b610f1a8185610ef4565b9350610f2a818560208601610b28565b610f3381610b52565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000610f9182610f6a565b610f9b8185610f75565b9350610fab818560208601610b28565b610fb481610b52565b840191505092915050565b6000610fcb8383610f86565b905092915050565b6000602082019050919050565b6000610feb82610f3e565b610ff58185610f49565b93508360208202850161100785610f5a565b8060005b8581101561104357848403895281516110248582610fbf565b945061102f83610fd3565b925060208a0199505060018101905061100b565b50829750879550505050505092915050565b600060a08301600083015161106d6000860182610ee5565b50602083015184820360208601526110858282610f05565b915050604083015161109a6040860182610ee5565b5060608301516110ad6060860182610ee5565b50608083015184820360808601526110c58282610fe0565b9150508091505092915050565b60006110de8383611055565b905092915050565b6000602082019050919050565b60006110fe82610eb9565b6111088185610ec4565b93508360208202850161111a85610ed5565b8060005b85811015611156578484038952815161113785826110d2565b9450611142836110e6565b925060208a0199505060018101905061111e565b50829750879550505050505092915050565b6000602082019050818103600083015261118281846110f3565b905092915050565b600082825260208201905092915050565b60006111a682610f3e565b6111b0818561118a565b9350836020820285016111c285610f5a565b8060005b858110156111fe57848403895281516111df8582610fbf565b94506111ea83610fd3565b925060208a019950506001810190506111c6565b50829750879550505050505092915050565b6000602082019050818103600083015261122a818461119b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061127957607f821691505b60208210810361128c5761128b611232565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112cc82610a9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112fe576112fd611292565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261136b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261132e565b611375868361132e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006113b26113ad6113a884610a9a565b61138d565b610a9a565b9050919050565b6000819050919050565b6113cc83611397565b6113e06113d8826113b9565b84845461133b565b825550505050565b600090565b6113f56113e8565b6114008184846113c3565b505050565b5b81811015611424576114196000826113ed565b600181019050611406565b5050565b601f8211156114695761143a81611309565b6114438461131e565b81016020851015611452578190505b61146661145e8561131e565b830182611405565b50505b505050565b600082821c905092915050565b600061148c6000198460080261146e565b1980831691505092915050565b60006114a5838361147b565b9150826002028217905092915050565b6114be82610b0c565b67ffffffffffffffff8111156114d7576114d6610c0d565b5b6114e18254611261565b6114ec828285611428565b600060209050601f83116001811461151f576000841561150d578287015190505b6115178582611499565b86555061157f565b601f19841661152d86611309565b60005b8281101561155557848901518255600182019150602085019450602081019050611530565b86831015611572578489015161156e601f89168261147b565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526115a18184610b63565b905092915050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b60006115df600d83610b17565b91506115ea826115a9565b602082019050919050565b6000602082019050818103600083015261160e816115d2565b9050919050565b7f566f74696e6720636c6f73656400000000000000000000000000000000000000600082015250565b600061164b600d83610b17565b915061165682611615565b602082019050919050565b6000602082019050818103600083015261167a8161163e565b9050919050565b600082905092915050565b60008190508160005260206000209050919050565b601f8211156116e2576116b38161168c565b6116bc8461131e565b810160208510156116cb578190505b6116df6116d78561131e565b830182611405565b50505b505050565b6116f18383611681565b67ffffffffffffffff81111561170a57611709610c0d565b5b6117148254611261565b61171f8282856116a1565b6000601f83116001811461174e576000841561173c578287013590505b6117468582611499565b8655506117ae565b601f19841661175c8661168c565b60005b828110156117845784890135825560018201915060208501945060208101905061175f565b868310156117a1578489013561179d601f89168261147b565b8355505b6001600288020188555050505b50505050505050565b600082825260208201905092915050565b60006117d483856117b7565b93506117e1838584610cb9565b6117ea83610b52565b840190509392505050565b600060208201905081810360008301526118108184866117c8565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220913cff3363b04284b4b5ec3da8ee8abcb4a332cadc2da65adca989eaa319674e64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 43,
        "contract": "contracts/PredictionMarket.sol:PredictionMarket",
        "label": "proposals",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Proposal)38_storage)"
      },
      {
        "astId": 46,
        "contract": "contracts/PredictionMarket.sol:PredictionMarket",
        "label": "nextProposalId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)38_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PredictionMarket.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)38_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)38_storage": {
        "encoding": "inplace",
        "label": "struct PredictionMarket.Proposal",
        "members": [
          {
            "astId": 21,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 23,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "hasVoted",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 30,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "encryptedVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 33,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "decryptedVotes",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 35,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "quorum",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 37,
            "contract": "contracts/PredictionMarket.sol:PredictionMarket",
            "label": "voteCount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}